# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# mysql service credit goes to https://firefart.at/post/using-mysql-service-with-github-actions/

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        ports:
          - 3306
        env:
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: test_db
          MYSQL_ROOT_PASSWORD: password
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3


    steps:
      - uses: actions/checkout@v2
      - name: Verify mysql connection
        env:
          PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
            sleep 1
          done
      - name: Set up Python 3.5
        uses: actions/setup-python@v1
        with:
          python-version: 3.5
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. PEP8 80 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=80 --statistics
      - name: build grpc
        run: |
          python3 -m grpc_tools.protoc -I proto --python_out=. --grpc_python_out=. proto/css_rpc/*.proto
          mkdir instance
      - name: Test with pytest
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          TESTING_ENV: github
        run: |
          pip install pytest
          pytest -x